From patchwork Tue Oct  2 13:16:12 2018
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Subject: [net-next,2/2] qede: Add driver support for 20G link speed.
X-Patchwork-Submitter: Sudarsana Reddy Kalluru <sudarsana.kalluru@cavium.com>
X-Patchwork-Id: 977846
Message-Id: <20181002131612.10859-3-sudarsana.kalluru@cavium.com>
To: <davem@davemloft.net>
Cc: <netdev@vger.kernel.org>, <Michal.Kalderon@cavium.com>
Date: Tue, 2 Oct 2018 06:16:12 -0700
From: Sudarsana Reddy Kalluru <sudarsana.kalluru@cavium.com>
List-Id: <netdev.vger.kernel.org>

Add driver support for reading/configuring the 20G link speed via ethtool.

Signed-off-by: Sudarsana Reddy Kalluru <Sudarsana.Kalluru@cavium.com>
Signed-off-by: Michal Kalderon <Michal.Kalderon@cavium.com>
---
 drivers/net/ethernet/qlogic/qede/qede_ethtool.c | 9 +++++++++
 1 file changed, 9 insertions(+)

Index: src/drivers/net/ethernet/qlogic/qede/qede_ethtool.c
===================================================================
--- src.orig/drivers/net/ethernet/qlogic/qede/qede_ethtool.c	2018-09-29 12:45:23.705946507 +0200
+++ src/drivers/net/ethernet/qlogic/qede/qede_ethtool.c	2018-10-02 16:46:19.674033676 +0200
@@ -392,6 +392,7 @@
 	{QED_LM_1000baseT_Half_BIT, ETHTOOL_LINK_MODE_1000baseT_Half_BIT},
 	{QED_LM_1000baseT_Full_BIT, ETHTOOL_LINK_MODE_1000baseT_Full_BIT},
 	{QED_LM_10000baseKR_Full_BIT, ETHTOOL_LINK_MODE_10000baseKR_Full_BIT},
+	{QED_LM_20000baseKR2_Full_BIT, ETHTOOL_LINK_MODE_20000baseKR2_Full_BIT},
 	{QED_LM_25000baseKR_Full_BIT, ETHTOOL_LINK_MODE_25000baseKR_Full_BIT},
 	{QED_LM_40000baseLR4_Full_BIT, ETHTOOL_LINK_MODE_40000baseLR4_Full_BIT},
 	{QED_LM_50000baseKR2_Full_BIT, ETHTOOL_LINK_MODE_50000baseKR2_Full_BIT},
@@ -507,6 +508,14 @@
 			}
 			params.adv_speeds = QED_LM_10000baseKR_Full_BIT;
 			break;
+		case SPEED_20000:
+			if (!(current_link.supported_caps &
+			      QED_LM_20000baseKR2_Full_BIT)) {
+				DP_INFO(edev, "20G speed not supported\n");
+				return -EINVAL;
+			}
+			params.adv_speeds = QED_LM_20000baseKR2_Full_BIT;
+			break;
 		case SPEED_25000:
 			if (!(current_link.supported_caps &
 			      QED_LM_25000baseKR_Full_BIT)) {
